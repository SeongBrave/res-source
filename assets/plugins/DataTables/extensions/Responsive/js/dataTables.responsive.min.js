!
function(a, b) {
    var c = function(c, d) {
        var e, f = function(a, b) {
            if (!d.versionCheck || !d.versionCheck("1.10.1")) throw "DataTables Responsive requires DataTables 1.10.1 or newer";
            this.s = {
                dt: new d.Api(a),
                columns: []
            },
            this.s.dt.settings()[0].responsive || (b && "string" == typeof b.details && (b.details = {
                type: b.details
            }), this.c = c.extend(!0, {},
            f.defaults, d.defaults.responsive, b), a.responsive = this, this._constructor())
        };
        return f.prototype = {
            _constructor: function() {
                var b, d = this,
                e = this.s.dt;
                e.settings()[0]._responsive = this,
                c(a).on("resize.dtr orientationchange.dtr processing.dt", e.settings()[0].oApi._fnThrottle(function() {
                    d._classLogic(),
                    d._detailsInit(),
                    d._resizeAuto(),
                    d._resize()
                })),
                e.on("destroy.dtr",
                function() {
                    c(a).off("resize.dtr orientationchange.dtr draw.dtr")
                }),
                this.c.breakpoints.sort(function(a, b) {
                    return a.width < b.width ? 1 : a.width > b.width ? -1 : 0
                }),
                this._classLogic(),
                this._resizeAuto(),
                b = this.c.details,
                b.type && (d._detailsInit(), this._detailsVis(), e.on("column-visibility.dtr",
                function() {
                    d._detailsVis()
                }), e.on("draw.dtr",
                function() {
                    e.rows({
                        page: "current"
                    }).iterator("row",
                    function(a, b) {
                        var c, f = e.row(b);
                        f.child.isShown() && (c = d.c.details.renderer(e, b), f.child(c, "child").show())
                    })
                }), c(e.table().node()).addClass("dtr-" + b.type)),
                this._resize()
            },
            _columnsVisiblity: function(a) {
                var b, d, e = this.s.dt,
                f = this.s.columns,
                g = c.map(f,
                function(b) {
                    return b.auto && null === b.minWidth ? !1 : !0 === b.auto ? "-": -1 !== c.inArray(a, b.includeIn)
                }),
                h = 0;
                for (b = 0, d = g.length; d > b; b++) ! 0 === g[b] && (h += f[b].minWidth);
                for (b = e.settings()[0].oScroll, b = b.sY || b.sX ? b.iBarWidth: 0, e = e.table().container().offsetWidth - b - h, b = 0, d = g.length; d > b; b++) f[b].control && (e -= f[b].minWidth);
                for (h = !1, b = 0, d = g.length; d > b; b++)"-" === g[b] && !f[b].control && (h || 0 > e - f[b].minWidth ? (h = !0, g[b] = !1) : g[b] = !0, e -= f[b].minWidth);
                for (e = !1, b = 0, d = f.length; d > b; b++) if (!f[b].control && !f[b].never && !g[b]) {
                    e = !0;
                    break
                }
                for (b = 0, d = f.length; d > b; b++) f[b].control && (g[b] = e);
                return - 1 === c.inArray(!0, g) && (g[0] = !0),
                g
            },
            _classLogic: function() {
                var a = this,
                b = this.c.breakpoints,
                d = this.s.dt.columns().eq(0).map(function(a) {
                    return a = this.column(a).header().className,
                    {
                        className: a,
                        includeIn: [],
                        auto: !1,
                        control: !1,
                        never: a.match(/\bnever\b/) ? !0 : !1
                    }
                }),
                e = function(a, b) {
                    var e = d[a].includeIn; - 1 === c.inArray(b, e) && e.push(b)
                },
                f = function(c, f, g, h) {
                    if (g) {
                        if ("max-" === g) for (h = a._find(f).width, f = 0, g = b.length; g > f; f++) b[f].width <= h && e(c, b[f].name);
                        else if ("min-" === g) for (h = a._find(f).width, f = 0, g = b.length; g > f; f++) b[f].width >= h && e(c, b[f].name);
                        else if ("not-" === g) for (f = 0, g = b.length; g > f; f++) - 1 === b[f].name.indexOf(h) && e(c, b[f].name)
                    } else d[c].includeIn.push(f)
                };
                d.each(function(a, d) {
                    var e, g, h, i, j;
                    for (e = a.className.split(" "), g = !1, h = 0, i = e.length; i > h; h++) {
                        if (j = c.trim(e[h]), "all" === j) return g = !0,
                        a.includeIn = c.map(b,
                        function(a) {
                            return a.name
                        }),
                        void 0;
                        if ("none" === j || "never" === j) return g = !0,
                        void 0;
                        if ("control" === j) return g = !0,
                        a.control = !0,
                        void 0;
                        c.each(b,
                        function(a, b) {
                            var c = b.name.split("-"),
                            e = j.match(RegExp("(min\\-|max\\-|not\\-)?(" + c[0] + ")(\\-[_a-zA-Z0-9])?"));
                            e && (g = !0, e[2] === c[0] && e[3] === "-" + c[1] ? f(d, b.name, e[1], e[2] + e[3]) : e[2] === c[0] && !e[3] && f(d, b.name, e[1], e[2]))
                        })
                    }
                    g || (a.auto = !0)
                }),
                this.s.columns = d
            },
            _detailsInit: function() {
                var a, b = this,
                d = this.s.dt,
                e = this.c.details;
                "inline" === e.type && (e.target = "td:first-child"),
                a = e.target,
                this.has !== !0 && (this.has = !0) && c(d.table().body()).on("click", "string" == typeof a ? a: "td",
                function() {
                    var e, f;
                    if (c(d.table().node()).hasClass("collapsed") && d.row(c(this).closest("tr")).length) {
                        if ("number" == typeof a && (e = 0 > a ? d.columns().eq(0).length + a: a, d.cell(this).index().column !== e)) return;
                        e = d.row(c(this).closest("tr")),
                        e.child.isShown() ? (e.child(!1), c(e.node()).removeClass("parent")) : (f = b.c.details.renderer(d, e[0]), e.child(f, "child").show(), c(e.node()).addClass("parent"))
                    }
                }),
                setTimeout(function() {
                    c("string" == typeof a ? a: "td", d.table().body()).each(function() {
                        if (c(d.table().node()).hasClass("collapsed") && d.row(c(this).closest("tr")).length) {
                            e = d.row(c(this).closest("tr"));
                            var a = b.c.details.renderer(d, e[0]);
                            e.child(a, "child").show(),
                            c(e.node()).addClass("parent")
                        }
                    })
                },
                500)
            },
            _detailsVis: function() {
                var a = this,
                b = this.s.dt,
                d = b.columns().indexes().filter(function(a) {
                    var d = b.column(a);
                    return d.visible() ? null: c(d.header()).hasClass("never") ? null: a
                }),
                e = !0; (0 === d.length || 1 === d.length && this.s.columns[d[0]].control) && (e = !1),
                e ? b.rows({
                    page: "current"
                }).eq(0).each(function(c) {
                    if (c = b.row(c), c.child()) {
                        var d = a.c.details.renderer(b, c[0]); ! 1 === d ? c.child.hide() : c.child(d, "child").show()
                    }
                }) : b.rows({
                    page: "current"
                }).eq(0).each(function(a) {
                    b.row(a).child.hide()
                })
            },
            _find: function(a) {
                for (var b = this.c.breakpoints,
                c = 0,
                d = b.length; d > c; c++) if (b[c].name === a) return b[c]
            },
            _resize: function() {
                var b, d, e = this.s.dt,
                f = c(a).width(),
                g = this.c.breakpoints,
                h = g[0].name,
                i = this.s.columns;
                for (b = g.length - 1; b >= 0; b--) if (f <= g[b].width) {
                    h = g[b].name;
                    break
                }
                for (d = this._columnsVisiblity(h), g = !1, b = 0, f = i.length; f > b; b++) if (!1 === d[b] && !i[b].never) {
                    g = !0;
                    break
                }
                c(e.table().node()).toggleClass("collapsed", g),
                e.columns().eq(0).each(function(a, b) {
                    e.column(a).visible(d[b])
                })
            },
            _resizeAuto: function() {
                var a, b, d, e, f = this.s.dt,
                g = this.s.columns;
                this.c.auto && -1 !== c.inArray(!0, c.map(g,
                function(a) {
                    return a.auto
                })) && (f.table().node(), a = f.table().node().cloneNode(!1), b = c(f.table().header().cloneNode(!1)).appendTo(a), d = c(f.table().body().cloneNode(!1)).appendTo(a), c(f.table().footer()).clone(!1).appendTo(a), f.rows({
                    page: "current"
                }).indexes().flatten().each(function(a) {
                    var b = f.row(a).node().cloneNode(!0);
                    f.columns(":hidden").flatten().length && c(b).append(f.cells(a, ":hidden").nodes().to$().clone()),
                    c(b).appendTo(d)
                }), e = f.columns().header().to$().clone(!1), c("<tr/>").append(e).appendTo(b), "inline" === this.c.details.type && c(a).addClass("dtr-inline collapsed"), a = c("<div/>").css({
                    width: 1,
                    height: 1,
                    overflow: "hidden"
                }).append(a), a.find("th.never, td.never").remove(), a.insertBefore(f.table().node()), f.columns().eq(0).each(function(a) {
					g[a].minWidth = e[a].offsetWidth || 0;
					console.log(g[a].minWidth);
                }), a.remove())
            }
        },
        f.breakpoints = [{
            name: "desktop",
            width: 1 / 0
        },
        {
            name: "tablet-l",
            width: 1024
        },
        {
            name: "tablet-p",
            width: 768
        },
        {
            name: "mobile-l",
            width: 480
        },
        {
            name: "mobile-p",
            width: 320
        }],
        f.defaults = {
            breakpoints: f.breakpoints,
            auto: !0,
            details: {
                renderer: function(a, b) {
                    var d = a.cells(b, ":hidden").eq(0).map(function(b) {
                        var d, e = c(a.column(b.column).header());
                        return b = a.cell(b).index(),
                        e.hasClass("control") || e.hasClass("never") ? "": (d = a.settings()[0], d = d.oApi._fnGetCellData(d, b.row, b.column, "display"), (e = e.text()) && (e += ":"), '<li data-dtr-index="' + b.column + '"><span class="dtr-title">' + e + '</span> <span style="' + (d && d.indexOf && -1 === d.indexOf("</a>") ? "word-break: break-all;white-space:pre-wrap;": "") + '" class="dtr-data">' + d + "</span></li>")
                    }).toArray().join("");
                    return d ? c('<ul data-dtr-index="' + b + '"/>').append(d) : !1
                },
                target: 0,
                type: "inline"
            }
        },
        e = c.fn.dataTable.Api,
        e.register("responsive()",
        function() {
            return this
        }),
        e.register("responsive.index()",
        function(a) {
            return a = c(a),
            {
                column: a.data("dtr-index"),
                row: a.parent().data("dtr-index")
            }
        }),
        e.register("responsive.rebuild()",
        function() {
            return this.iterator("table",
            function(a) {
                a._responsive && a._responsive._classLogic()
            })
        }),
        e.register("responsive.recalc()",
        function() {
            return this.iterator("table",
            function(a) {
                a._responsive && (a._responsive._resizeAuto(), a._responsive._resize())
            })
        }),
        f.version = "1.0.7",
        c.fn.dataTable.Responsive = f,
        c.fn.DataTable.Responsive = f,
        c(b).on("init.dt.dtr",
        function(a, b) {
            if ("dt" === a.namespace && (c(b.nTable).hasClass("responsive") || c(b.nTable).hasClass("dt-responsive") || b.oInit.responsive || d.defaults.responsive)) {
                var e = b.oInit.responsive; ! 1 !== e && new f(b, c.isPlainObject(e) ? e: {})
            }
        }),
        f
    }; ! jQuery.fn.dataTable.Responsive && c(jQuery, jQuery.fn.dataTable)
} (window, document);